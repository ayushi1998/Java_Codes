
import java.io.IOException;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.Collection;
import java.util.HashMap;
import java.util.PriorityQueue;
import java.util.StringTokenizer;




/** Class for buffered reading int and double values */
class Reader{
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                     new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }

    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            //TODO add check for eof if necessary
            tokenizer = new StringTokenizer(
                   reader.readLine() );
        }
        return tokenizer.nextToken();
    }

    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
    static long nextLong() throws IOException {
        return Long.parseLong( next() );
    }
    static double nextDouble() throws IOException {
        return Double.parseDouble( next() );
    }
}
public class Maycp3 {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		
		Reader.init(System.in);
		//int t=Reader.nextInt();
		
		
	
			int n=Reader.nextInt();
			int k=Reader.nextInt();
			//int b=Reader.nextInt();
			
			HashMap<Integer,Integer> hm=new HashMap<Integer,Integer>();
			for(int j=0;j<n;j++)
			{
				int num=Reader.nextInt();
				if(!hm.containsKey(num))
				{
					hm.put(num, j+1);
				}
			}
			
			if(hm.size()<k)
			{
				System.out.println("NO");
			}
			else
			{
				System.out.println("YES");
				Collection<Integer> a=hm.values();
				for(int k1: a)
				{
					System.out.print(k1+" ");
				}
			}
	
		
		

}
}