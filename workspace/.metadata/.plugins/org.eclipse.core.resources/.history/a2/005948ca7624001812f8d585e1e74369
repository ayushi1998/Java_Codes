import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.StringTokenizer;

class Reader{
    static BufferedReader reader;
    static StringTokenizer tokenizer;

    /** call this method to initialize reader for InputStream */
    static void init(InputStream input) {
        reader = new BufferedReader(
                     new InputStreamReader(input) );
        tokenizer = new StringTokenizer("");
    }

    /** get next word */
    static String next() throws IOException {
        while ( ! tokenizer.hasMoreTokens() ) {
            //TODO add check for eof if necessary
            tokenizer = new StringTokenizer(
                   reader.readLine() );
        }
        return tokenizer.nextToken();
    }

    static int nextInt() throws IOException {
        return Integer.parseInt( next() );
    }
	
    static double nextDouble() throws IOException {
        return Double.parseDouble( next() );
    }

	 static long nextLong() throws IOException{
		// TODO Auto-generated method stub
		return Long.parseLong( next() );
	}
}

public class Main {
	public static void main(String[] args) throws IOException {
		Reader.init(System.in);
		int t=Reader.nextInt();
		for(int i=0;i<t;i++)
		{
			int n=Reader.nextInt();
			long h=Reader.nextLong();
			long[] arr=new long[n];
			
			for(int j=0;j<n;j++)
			{
				arr[j]=Reader.nextLong();
			}
			Arrays.sort(arr);
			int start=0; int end=n-1;
			int mid;
			long pred=0;
			while(start<=end)
			{
				mid=(start+end)/2;
				if(arr[mid]<=h)
				{
					pred=arr[mid];
					long cnt=0;
					for(int k=0;k<n;k++)
					{
						
							cnt=(long) (cnt+Math.ceil((arr[k]/pred)));
						    
						
					}
					System.out.println(cnt+"cnt");
					if(cnt==h)
					{
						break;
					}
					
					start=mid+1;
					
				}
				else
				{
					end=mid-1;
				}
				
				
				
			}
			System.out.println(pred);
			
		}
		
 }

}